# -*- makefile -*-

MAKECWD:=$(shell pwd)

## define the function MakePath which, when invoked as
# $(call MakePath,P)
# returns the "shortest" (no redundant '..'s) relative path to
# P from the current directory [directory of invocation].


## find a makepath utility and get it compiled as C or scripted
## as perl or BUST!

ifneq ($(shell ${MAKEFILE/}makepath .),)

  define MakePath
$(shell ${MAKEFILE/}makepath $1 ${MAKECWD})
  endef

else
  $(warning Attempting to create the makepath executable in ${MAKEFILE/} \
   $(shell ${CC} \
           ${CFLAGS} ${CLDFLAGS} \
           -o ${MAKEFILE/}makepath ${MAKEFILE/}makepath.c \
           ${CLIBS}))

  ifneq ($(shell ${MAKEFILE/}makepath .),)

    define MakePath
$(shell ${MAKEFILE/}makepath $1 ${MAKECWD})
    endef

  else

    $(warning COMPILE FAILED for ${MAKEFILE/}makepath)
    $(warning Attempting to use PERL version)

    ifneq ($(shell ${PERL} ${MAKEFILE/}makepath.pl .),)

      define MakePath
$(shell ${PERL} ${MAKEFILE/}makepath.pl $1 ${MAKECWD})
      endef

    else

      $(warning PERL version ${MAKEFILE/}makepath.pl FAILED)
      $(error Aborting this build due to lack of makepath support.)

    endif

  endif

endif

